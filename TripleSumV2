import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List; 
public class Permutation { 
	
	
	
	static List<int[]> combinationUtil(int arr[], int n, int r, 
						int index, int data[], int i, int[] indeces, List<int[]> buffer) 
	{ 
		
		
		if (index == r) {
			 
			int sum = 0;
			
			for (int j = 0; j < r; j++) {
				sum = sum + data[j];
				
			}
			
			if(sum%data[0]==0 || sum%data[1]==0 || sum%data[2]==0) {
				
				if(!((sum%data[0]==0 && sum%data[1]==0)||(sum%data[0]==0 && sum%data[2]==0)||(sum%data[1]==0 && sum%data[2]==0))) {
					
					buffer.add(indeces) ;
				}
			}
			
			return buffer; 
		} 
		
		
		if (i >= n) 
			return buffer; 
		
		data[index] = arr[i];
		indeces[index] = i+1;
		combinationUtil(arr, n, 3, index + 1, 
							data, i + 1,indeces, buffer); 
		
		combinationUtil(arr, n, 3, index, data, i + 1, indeces, buffer); 
		
		return buffer;
		
	} 
	
	
	static void printCombination(int arr[], int n, int r, int[] indeces, ArrayList<int[]> buffer) 
	{ 
		
		int data[] = new int[r]; 
		List<int[]> triplets = combinationUtil(arr, n, 3, 0, data, 0, indeces, buffer);
		
		System.out.println(triplets.size()*6);
		
		
	} 
	
	public static void main(String[] args) 
	{ 
		int arr[] = { 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25
				,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50
				,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75
				,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100
				
		};
		int r = 3; 
		int n = arr.length; 
		int indeces[] = new int[3];
		ArrayList<int[]> buffer = new ArrayList<>();
		printCombination(arr, n, 3, indeces, buffer); 
	} 
} 
